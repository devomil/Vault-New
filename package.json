{
  "name": "vault-modernization",
  "version": "1.0.0",
  "description": "Legacy .NET Framework e-commerce system modernization to Node.js/TypeScript multi-tenant SaaS",
  "private": true,
  "workspaces": [
    "services/*",
    "shared/*",
    "infrastructure/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:gateway\" \"npm run dev:services\"",
    "dev:gateway": "cd services/api-gateway && npm run dev",
    "dev:services": "concurrently \"npm run dev:product-intelligence\" \"npm run dev:marketplace-integration\" \"npm run dev:vendor-integration\" \"npm run dev:order-processing\" \"npm run dev:pricing-engine\" \"npm run dev:inventory-management\" \"npm run dev:accounting-system\" \"npm run dev:analytics-engine\" \"npm run dev:notification-service\" \"npm run dev:performance-optimization\" \"npm run dev:security-compliance\"",
    "dev:product-intelligence": "cd services/product-intelligence && npm run dev",
    "dev:marketplace-integration": "cd services/marketplace-integration && npm run dev",
    "dev:vendor-integration": "cd services/vendor-integration && npm run dev",
    "dev:order-processing": "cd services/order-processing && npm run dev",
    "dev:pricing-engine": "cd services/pricing-engine && npm run dev",
    "dev:inventory-management": "cd services/inventory-management && npm run dev",
    "dev:accounting-system": "cd services/accounting-system && npm run dev",
    "dev:analytics-engine": "cd services/analytics-engine && npm run dev",
    "dev:notification-service": "cd services/notification-service && npm run dev",
    "dev:performance-optimization": "cd services/performance-optimization && npm run dev",
    "dev:security-compliance": "cd services/security-compliance && npm run dev",
    "build": "npm run build:shared && npm run build:services && npm run build:gateway",
    "build:shared": "npm run build --workspace=shared/types && npm run build --workspace=shared/utils && npm run build --workspace=shared/middleware && npm run build --workspace=shared/database && npm run build --workspace=shared/config",
    "build:services": "npm run build --workspace=services/product-intelligence && npm run build --workspace=services/marketplace-integration && npm run build --workspace=services/vendor-integration && npm run build --workspace=services/order-processing && npm run build --workspace=services/pricing-engine && npm run build --workspace=services/inventory-management && npm run build --workspace=services/accounting-system && npm run build --workspace=services/analytics-engine && npm run build --workspace=services/notification-service && npm run build --workspace=services/performance-optimization && npm run build --workspace=services/security-compliance",
    "build:gateway": "npm run build --workspace=services/api-gateway",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:performance",
    "test:unit": "npm run test:shared && npm run test:services && npm run test:gateway",
    "test:shared": "npm run test --workspace=shared/types && npm run test --workspace=shared/utils && npm run test --workspace=shared/middleware && npm run test --workspace=shared/database && npm run test --workspace=shared/config",
    "test:services": "npm run test --workspace=services/product-intelligence && npm run test --workspace=services/marketplace-integration && npm run test --workspace=services/vendor-integration && npm run test --workspace=services/order-processing && npm run test --workspace=services/pricing-engine && npm run test --workspace=services/inventory-management && npm run test --workspace=services/accounting-system && npm run test --workspace=services/analytics-engine && npm run test --workspace=services/notification-service && npm run test --workspace=services/performance-optimization && npm run test --workspace=services/security-compliance",
    "test:gateway": "npm run test --workspace=services/api-gateway",
    "test:integration": "npm run test:integration:api-gateway",
    "test:integration:api-gateway": "cd services/api-gateway && npm run test:integration",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:performance": "k6 run infrastructure/tests/load-test.js",
    "test:performance:stress": "k6 run infrastructure/tests/stress-test.js",
    "test:smoke": "./infrastructure/scripts/smoke-tests.sh",
    "test:smoke:windows": "powershell -ExecutionPolicy Bypass -File infrastructure/scripts/smoke-tests.ps1",
    "test:monitor": "./infrastructure/scripts/monitor-deployment.sh",
    "test:coverage": "npm run test:coverage:shared && npm run test:coverage:services && npm run test:coverage:gateway",
    "test:coverage:shared": "npm run test:coverage --workspace=shared/types && npm run test:coverage --workspace=shared/utils && npm run test:coverage --workspace=shared/middleware && npm run test:coverage --workspace=shared/database && npm run test:coverage --workspace=shared/config",
    "test:coverage:services": "npm run test:coverage --workspace=services/product-intelligence && npm run test:coverage --workspace=services/marketplace-integration && npm run test:coverage --workspace=services/vendor-integration && npm run test:coverage --workspace=services/order-processing && npm run test:coverage --workspace=services/pricing-engine && npm run test:coverage --workspace=services/inventory-management && npm run test:coverage --workspace=services/accounting-system && npm run test:coverage --workspace=services/analytics-engine && npm run test:coverage --workspace=services/notification-service && npm run test:coverage --workspace=services/performance-optimization && npm run test:coverage --workspace=services/security-compliance",
    "test:coverage:gateway": "npm run test:coverage --workspace=services/api-gateway",
    "lint": "npm run lint:shared && npm run lint:services && npm run lint:gateway",
    "lint:shared": "npm run lint --workspace=shared/types && npm run lint --workspace=shared/utils && npm run lint --workspace=shared/middleware && npm run lint --workspace=shared/database && npm run lint --workspace=shared/config",
    "lint:services": "npm run lint --workspace=services/product-intelligence && npm run lint --workspace=services/marketplace-integration && npm run lint --workspace=services/vendor-integration && npm run lint --workspace=services/order-processing && npm run lint --workspace=services/pricing-engine && npm run lint --workspace=services/inventory-management && npm run lint --workspace=services/accounting-system && npm run lint --workspace=services/analytics-engine && npm run lint --workspace=services/notification-service && npm run lint --workspace=services/performance-optimization && npm run lint --workspace=services/security-compliance",
    "lint:gateway": "npm run lint --workspace=services/api-gateway",
    "lint:fix": "npm run lint:fix:shared && npm run lint:fix:services && npm run lint:fix:gateway",
    "lint:fix:shared": "npm run lint:fix --workspace=shared/types && npm run lint:fix --workspace=shared/utils && npm run lint:fix --workspace=shared/middleware && npm run lint:fix --workspace=shared/database && npm run lint:fix --workspace=shared/config",
    "lint:fix:services": "npm run lint:fix --workspace=services/product-intelligence && npm run lint:fix --workspace=services/marketplace-integration && npm run lint:fix --workspace=services/vendor-integration && npm run lint:fix --workspace=services/order-processing && npm run lint:fix --workspace=services/pricing-engine && npm run lint:fix --workspace=services/inventory-management && npm run lint:fix --workspace=services/accounting-system && npm run lint:fix --workspace=services/analytics-engine && npm run lint:fix --workspace=services/notification-service && npm run lint:fix --workspace=services/performance-optimization && npm run lint:fix --workspace=services/security-compliance",
    "lint:fix:gateway": "npm run lint:fix --workspace=services/api-gateway",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "setup": "node scripts/dev-setup.js",
    "dev:docker": "docker-compose up -d",
    "dev:docker:build": "docker-compose up -d --build",
    "dev:docker:down": "docker-compose down",
    "dev:docker:logs": "docker-compose logs -f",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "db:migrate": "cd shared/database && npm run db:migrate",
    "db:seed": "cd shared/database && npm run db:seed",
    "db:reset": "cd shared/database && npm run db:reset",
    "db:studio": "cd shared/database && npx prisma studio",
    "db:generate": "cd shared/database && npx prisma generate",
    "clean": "npm run clean:node_modules && npm run clean:dist && npm run clean:coverage",
    "clean:node_modules": "find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +",
    "clean:dist": "find . -name 'dist' -type d -prune -exec rm -rf '{}' +",
    "clean:coverage": "find . -name 'coverage' -type d -prune -exec rm -rf '{}' +",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@types/jest": "^29.5.8",
    "@types/node": "^20.10.0",
    "@types/supertest": "^2.0.16",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "concurrently": "^8.2.2",
    "dotenv": "^17.2.0",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.0",
    "prisma": "^6.11.1",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "typescript": "^5.3.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx,json,md}": [
      "prettier --write"
    ]
  },
  "keywords": [
    "e-commerce",
    "marketplace",
    "multi-tenant",
    "saas",
    "microservices",
    "typescript",
    "nodejs"
  ],
  "author": "Vault Modernization Team",
  "license": "MIT",
  "dependencies": {
    "@prisma/client": "^6.11.1"
  }
}
